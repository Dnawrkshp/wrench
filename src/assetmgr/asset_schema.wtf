/*
	wrench - A set of modding tools for the Ratchet & Clank PS2 games.
	Copyright (C) 2019-2022 chaoticgd

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

Metadata metadata {
	format_version: 8
}

// *****************************************************************************

AssetType Root {}

AssetType Reference {
	StringAttribute asset {}
}

AssetType Collection {
	desc: 'A generic container for other assets.'
}

AssetType Binary {
	desc: 'A raw binary file.'
	
	FileReferenceAttribute src {
		desc: 'The file path of the binary file, relative to the .asset file.'
	}
	
	// These are only used for testing.
	StringAttribute asset_type { hidden: true }
	IntegerAttribute format_hint { hidden: true }
	IntegerAttribute game { hidden: true }
}

// *****************************************************************************

AssetType Build {
	desc: 'A build of the game.'
	
	IntegerAttribute game {
		desc: 'The game being built. 1 for R&C1, 2 for R&C2, 3 for R&C3, 4 for Deadlocked.'
	}
	IntegerAttribute ps2_logo_key { min: 0 max: 255 }
	IntegerAttribute single_level { default: -1 }
	
	Child ps2_logo { allowed_types: ['Texture'] }
	Child primary_volume_descriptor { allowed_types: ['PrimaryVolumeDescriptor'] }
	Child armor    { allowed_types: ['ArmorWad' 'Binary'] }
	Child audio    { allowed_types: ['AudioWad' 'Binary'] }
	Child bonus    { allowed_types: ['BonusWad' 'Binary'] }
	Child gadget   { allowed_types: ['GadgetWad' 'Binary'] }
	Child hud      { allowed_types: ['HudWad' 'Binary'] }
	Child misc     { allowed_types: ['MiscWad' 'Binary'] }
	Child mpeg     { allowed_types: ['MpegWad' 'Binary'] }
	Child online   { allowed_types: ['OnlineWad' 'Binary'] }
	Child scene    { allowed_types: ['SceneWad' 'Binary'] }
	Child space    { allowed_types: ['SpaceWad' 'Binary'] }
	Child levels   { allowed_types: ['Collection'] }
	Child files    { allowed_types: ['Collection'] }
}

AssetType PrimaryVolumeDescriptor {
	StringAttribute system_identifier {}
	StringAttribute volume_identifier {}
	StringAttribute volume_set_identifier {}
	StringAttribute publisher_identifier {}
	StringAttribute data_preparer_identifier {}
	StringAttribute application_identifier {}
	StringAttribute copyright_file_identifier {}
	StringAttribute abstract_file_identifier {}
	StringAttribute bibliographic_file_identifier {}
}

AssetType File {
	FileReferenceAttribute src {}
	StringAttribute path {}
}

// *****************************************************************************

AssetType ArmorWad {
	wad: true
	
	Child armors {
		desc: 'A list of all the armors/skins.'
		allowed_types: ['Collection']
	}
	
	Child bot_textures         { allowed_types: ['Collection'] }
	Child landstalker_textures { allowed_types: ['Collection'] }
	Child dropship_textures    { allowed_types: ['Collection'] }
}

AssetType AudioWad {
	wad: true
	
	Child vendor     { allowed_types: ['Collection'] }
	Child global_sfx { allowed_types: ['Collection'] }
	Child help       { allowed_types: ['Collection'] }
}

AssetType HelpAudio {
	wad: true
	
	Child english { allowed_types: ['Sound' 'Binary'] }
	Child french  { allowed_types: ['Sound' 'Binary'] }
	Child german  { allowed_types: ['Sound' 'Binary'] }
	Child spanish { allowed_types: ['Sound' 'Binary'] }
	Child italian { allowed_types: ['Sound' 'Binary'] }
}

AssetType BonusWad {
	wad: true
	
	Child credits_text   { allowed_types: ['Collection'] }
	Child credits_images { allowed_types: ['Collection'] }
	Child demomenu       { allowed_types: ['Collection'] }
	Child demoexit       { allowed_types: ['Collection'] }
	Child cheat_images   { allowed_types: ['Collection'] }
	Child skill_images   { allowed_types: ['Collection'] }
	Child trophy_image   { allowed_types: ['Texture' 'Binary'] }
	Child dige           { allowed_types: ['Binary'] }
}

AssetType GadgetWad {
	wad: true
}

AssetType HudWad {
	wad: true
	
	Child online_images        { allowed_types: ['Collection'] }
	Child ratchet_seqs         { allowed_types: ['Collection'] }
	Child hud_seqs             { allowed_types: ['Collection'] }
	Child vendor               { allowed_types: ['Binary'] }
	Child all_text             { allowed_types: ['Collection'] }
	Child hudw3d               { allowed_types: ['Binary'] }
	Child e3_level_ss          { allowed_types: ['Collection'] }
	Child nw_dnas_image        { allowed_types: ['Texture' 'Binary'] }
	Child split_screen_texture { allowed_types: ['Texture' 'Binary'] }
	Child radar_maps           { allowed_types: ['Collection'] }
	Child weapon_plates_large  { allowed_types: ['Collection'] }
	Child mission_plates_large { allowed_types: ['Collection'] }
	Child gui_plates           { allowed_types: ['Collection'] }
	Child vendor_plates        { allowed_types: ['Collection'] }
	Child loading_screen       { allowed_types: ['Texture' 'Binary'] }
	Child planets              { allowed_types: ['Collection'] }
	Child cinematics           { allowed_types: ['Collection'] }
	Child equip_large          { allowed_types: ['Collection'] }
	Child equip_small          { allowed_types: ['Collection'] }
	Child moves                { allowed_types: ['Collection'] }
	Child save_level           { allowed_types: ['Collection'] }
	Child save_empty           { allowed_types: ['Collection'] }
	Child skills               { allowed_types: ['Collection'] }
	Child reward_back          { allowed_types: ['Texture' 'Binary'] }
	Child complete_back        { allowed_types: ['Texture' 'Binary'] }
	Child complete_back_coop   { allowed_types: ['Texture' 'Binary'] }
	Child rewards              { allowed_types: ['Collection'] }
	Child leaderboard          { allowed_types: ['Texture' 'Binary'] }
	Child cutaways             { allowed_types: ['Collection'] }
	Child sketchbook           { allowed_types: ['Collection'] }
	Child character_epilogues  { allowed_types: ['Collection'] }
	Child character_cards      { allowed_types: ['Collection'] }
	Child equip_plate          { allowed_types: ['Texture' 'Binary'] }
	Child hud_flythru          { allowed_types: ['Texture' 'Binary'] }
	Child mp_maps              { allowed_types: ['Collection'] }
	Child tourney_plates_large { allowed_types: ['Collection'] }
}

AssetType MiscWad {
	wad: true
	
	Child debug_font    { allowed_types: ['Texture' 'Binary'] }
	Child irx           { allowed_types: ['IrxWad'] }
	Child save_game     { allowed_types: ['Binary'] }
	Child frontend_code { allowed_types: ['Binary'] }
	Child frontend      { allowed_types: ['Binary'] }
	Child exit          { allowed_types: ['Binary'] }
	Child boot          { allowed_types: ['BootWad'] }
	Child gadget        { allowed_types: ['Binary'] }
}

AssetType IrxWad {
	wad: true
	
	Child sio2man  { allowed_types: ['Binary'] }
	Child mcman    { allowed_types: ['Binary'] }
	Child mcserv   { allowed_types: ['Binary'] }
	Child padman   { allowed_types: ['Binary'] }
	Child mtapman  { allowed_types: ['Binary'] }
	Child libsd    { allowed_types: ['Binary'] }
	Child 989snd   { allowed_types: ['Binary'] }
	Child stash    { allowed_types: ['Binary'] }
	Child inet     { allowed_types: ['Binary'] }
	Child netcnf   { allowed_types: ['Binary'] }
	Child inetctl  { allowed_types: ['Binary'] }
	Child msifrpc  { allowed_types: ['Binary'] }
	Child dev9     { allowed_types: ['Binary'] }
	Child smap     { allowed_types: ['Binary'] }
	Child libnetb  { allowed_types: ['Binary'] }
	Child ppp      { allowed_types: ['Binary'] }
	Child pppoe    { allowed_types: ['Binary'] }
	Child usbd     { allowed_types: ['Binary'] }
	Child lgaud    { allowed_types: ['Binary'] }
	Child eznetcnf { allowed_types: ['Binary'] }
	Child eznetctl { allowed_types: ['Binary'] }
	Child lgkbm    { allowed_types: ['Binary'] }
	Child streamer { allowed_types: ['Binary'] }
	Child astrm    { allowed_types: ['Binary'] }
}

AssetType BootWad {
	wad: true
	
	Child english     { allowed_types: ['Binary'] }
	Child french      { allowed_types: ['Binary'] }
	Child german      { allowed_types: ['Binary'] }
	Child spanish     { allowed_types: ['Binary'] }
	Child italian     { allowed_types: ['Binary'] }
	Child hud         { allowed_types: ['Collection'] }
	Child boot_plates { allowed_types: ['Collection'] }
	Child sram        { allowed_types: ['Binary'] }
}

AssetType MpegWad {
	desc: 'The file containing all of the MPEG cutscenes.'
	wad: true
	
	Child story {
		desc: 'A list of all the MPEG cutscenes.'
		allowed_types: ['Collection']
	}
}

AssetType Mpeg {
	desc: 'A video file.'
	bin_leaf: true
	
	FileReferenceAttribute src {}
}

AssetType OnlineWad {
	wad: true
	
	Child data { allowed_types: ['Binary'] }
	Child transition_backgrounds { allowed_types: ['Collection'] }
}

AssetType SceneWad {}

AssetType SpaceWad {
	wad: true
	
	Child transitions { allowed_types: ['Collection'] }
}

// *****************************************************************************

AssetType Level {
	Child level { allowed_types: ['LevelWad' 'Binary' ] }
	Child audio { allowed_types: ['LevelAudioWad' 'Binary' ] }
	Child scene { allowed_types: ['LevelSceneWad' 'Binary' ] }
}

AssetType LevelWad {
	wad: true
	level_wad: true
	
	IntegerAttribute id {}
	IntegerAttribute reverb {}
	
	Child data            { allowed_types: ['Binary'] }
	Child core_sound_bank { allowed_types: ['Binary'] }
	Child chunks          { allowed_types: ['Collection'] }
	Child gameplay_core   { allowed_types: ['Binary'] }
	Child missions        { allowed_types: ['Collection'] }
	Child art_instances   { allowed_types: ['Binary'] }
}

AssetType Chunk {
	Child tfrags     { allowed_types: ['Binary'] }
	Child collision  { allowed_types: ['Binary'] }
	Child sound_bank { allowed_types: ['Binary'] }
}

AssetType Mission {
	Child instances  { allowed_types: ['Binary'] }
	Child classes    { allowed_types: ['Binary'] }
	Child sound_bank { allowed_types: ['Binary'] }
}

AssetType LevelAudioWad {
	wad: true
	level_wad: true
	
	Child bin_data       { allowed_types: ['Collection'] }
	Child upgrade_sample { allowed_types: ['Binary'] }
	Child platinum_bolt  { allowed_types: ['Binary'] }
	Child spare          { allowed_types: ['Binary'] }
}

AssetType LevelSceneWad {
	wad: true
	level_wad: true
	
	Child scenes { allowed_types: ['Collection'] }
}

AssetType Scene {
	Child speech_english_left  { allowed_types: ['Binary'] }
	Child speech_english_right { allowed_types: ['Binary'] }
	Child subtitles            { allowed_types: ['Binary'] }
	Child speech_french_left   { allowed_types: ['Binary'] }
	Child speech_french_right  { allowed_types: ['Binary'] }
	Child speech_german_left   { allowed_types: ['Binary'] }
	Child speech_german_right  { allowed_types: ['Binary'] }
	Child speech_spanish_left  { allowed_types: ['Binary'] }
	Child speech_spanish_right { allowed_types: ['Binary'] }
	Child speech_italian_left  { allowed_types: ['Binary'] }
	Child speech_italian_right { allowed_types: ['Binary'] }
	Child moby_load            { allowed_types: ['Binary'] }
	Child chunks               { allowed_types: ['Collection'] }
}

// *****************************************************************************

AssetType MobyClass {
	bin_leaf: true
	
	Child mesh { allowed_types: ['Mesh' 'Binary'] }
	Child low_lod_mesh { allowed_types: ['Mesh' 'Binary'] }
	
	Child materials { allowed_types: ['Collection'] }
}

AssetType Material {
	StringAttribute name {
		desc: 'The name of the COLLADA material being referenced.'
	}
	
	BooleanAttribute glass {
		desc: 'Make the material shiny, like glass?'
	}
	
	BooleanAttribute chrome {
		desc: 'Make the material shiny, like chrome?'
	}
	
	Child texture { allowed_types: ['Texture'] }
}

// *****************************************************************************

AssetType Mesh {
	bin_leaf: true
	
	FileReferenceAttribute src {
		desc: 'The file path of the COLLADA (.dae) file to use.'
	}
	
	StringAttribute node {
		desc: 'The name of the COLLADA node to use. This is the same as the Blender node name.'
	}
}

AssetType Texture {
	desc: 'A reference to an image file. Only PNG images are currently supported.'
	bin_leaf: true
	
	FileReferenceAttribute src {}
	
	Example 0 {
		Texture my_texture {
			src: 'my_texture.png'
		}
	}
}
